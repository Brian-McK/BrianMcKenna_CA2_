{"ast":null,"code":"var _jsxFileName = \"/Users/brianmckenna/Desktop/node_js_projects/BrianMcKenna_CA2/client/src/components/Modal/AddMovieForm.js\";\nimport React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles'; // had to find a way of changing a react hook style to a class component style as my react hook form was not working properly found the solution here: https://github.com/mui-org/material-ui/issues/15820\n\nconst styles = theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '99%'\n    }\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n    '& p': {\n      color: 'blue'\n    }\n  }\n});\n\nclass AddMovieForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      imdbID: \"\",\n      Title: \"\",\n      Genre: \"\",\n      Plot: \"\",\n      Runtime: \"\",\n      Year: \"\",\n      Director: \"\",\n      imdbRating: \"\"\n    };\n\n    this.onSubmit = formErrors => {\n      console.log(formErrors.length);\n\n      if (formErrors.length === 0) {\n        this.props.addMovie(this.state);\n        this.setState({\n          imdbID: \"\",\n          Title: \"\",\n          Genre: \"\",\n          Plot: \"\",\n          Runtime: \"\",\n          Year: \"\",\n          Director: \"\",\n          imdbRating: \"\"\n        });\n        this.props.closeWithSubmit();\n      } else {\n        alert(\"NOT ENTERED\");\n      }\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props; // add each error to a list\n    // onsubmit check the length of the error list\n    // if the errors are === 0 then allow the onsubmit to happen\n\n    let INVALID_MOVIE_ID = \"\";\n    let INVALID_TITLE = \"\";\n    let INVALID_GENRE = \"\";\n    let INVALID_PLOT = \"\";\n    let INVALID_RUNTIME = \"\";\n    let INVALID_YEAR = \"\";\n    let INVALID_DIRECTOR = \"\";\n    let INVALID_IMDB_RATING = \"\";\n    const formErrors = []; // conditions for error messages\n\n    if (!this.state.imdbID.match(\"[T][T][0-9]+\")) {\n      INVALID_MOVIE_ID += \"Enter a valid Movie Id e.g TT012345\";\n      formErrors.push(INVALID_MOVIE_ID);\n    }\n\n    if (!this.state.Title.match(\"^[a-zA-Z0-9]{2,30}$\")) {\n      INVALID_TITLE += \"Enter a valid Movie Title (range 2-30 characters)\";\n      formErrors.push(INVALID_TITLE);\n    }\n\n    if (!this.state.Genre.match(\"^[a-zA-Z0-9]{2,30}$\")) {\n      INVALID_GENRE += \"Enter a valid Movie Genre (range 2-30 characters)\";\n      formErrors.push(INVALID_GENRE);\n    }\n\n    if (!this.state.Plot.match(\"^[a-zA-Z0-9]{2,200}$\")) {\n      INVALID_PLOT += \"Enter a valid Movie Plot (range 2-200 characters)\";\n      formErrors.push(INVALID_PLOT);\n    }\n\n    if (!this.state.Runtime.match(\"^[0-9]{2,3} [m][i][n]$\")) {\n      INVALID_RUNTIME += \"Enter a valid Movie Runtime e.g 90 min or 120 min\";\n      formErrors.push(INVALID_RUNTIME);\n    }\n\n    if (!this.state.Year.match(\"(?:(?:19|20)[0-9]{2})\")) {\n      INVALID_YEAR += \"Enter a valid Movie Year (range 1900-2099)\";\n      formErrors.push(INVALID_YEAR);\n    }\n\n    if (this.state.Director.length < 2 || !this.state.Director.match(\"^[A-Za-z\\\\s]+$\")) {\n      INVALID_DIRECTOR += \"Enter a valid Movie Director e.g Michael Jackson\";\n      formErrors.push(INVALID_DIRECTOR);\n    }\n\n    if (!this.state.imdbRating.match(\"^([0-9]|1[0])$\")) {\n      INVALID_IMDB_RATING += \"Enter a valid IMDB Rating (1-10)\";\n      formErrors.push(INVALID_IMDB_RATING);\n    } // const errorListItems = formErrors.map((formError, index) => <li key={index++}>{formError}</li>)\n\n\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: classes.root,\n      noValidate: true,\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      name: \"movieId\",\n      label: \"Movie Id\",\n      placeholder: \"Enter Movie ID...\",\n      variant: \"outlined\",\n      value: this.state.imdbID,\n      onChange: e => this.setState({\n        imdbID: e.target.value\n      }),\n      helperText: INVALID_MOVIE_ID,\n      id: \"standard-error-helper-text\",\n      className: classes.textField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      name: \"movieTitle\",\n      label: \"Movie Title\",\n      placeholder: \"Enter Movie Title...\",\n      variant: \"outlined\",\n      value: this.state.Title,\n      onChange: e => this.setState({\n        Title: e.target.value\n      }),\n      helperText: INVALID_TITLE,\n      id: \"standard-error-helper-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      name: \"movieGenre\",\n      label: \"Movie Genre\",\n      placeholder: \"Enter Movie Genre...\",\n      variant: \"outlined\",\n      value: this.state.Genre,\n      onChange: e => this.setState({\n        Genre: e.target.value\n      }),\n      helperText: INVALID_GENRE,\n      id: \"standard-error-helper-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      name: \"moviePlot\",\n      label: \"Movie Plot\",\n      placeholder: \"Enter Movie Plot...\",\n      variant: \"outlined\",\n      multiline: true,\n      fullWidth: true,\n      value: this.state.Plot,\n      onChange: e => this.setState({\n        Plot: e.target.value\n      }),\n      helperText: INVALID_PLOT,\n      id: \"standard-error-helper-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      name: \"movieRuntime\",\n      label: \"Movie Runtime\",\n      placeholder: \"Enter Movie Runtime...\",\n      variant: \"outlined\",\n      value: this.state.Runtime,\n      onChange: e => this.setState({\n        Runtime: e.target.value\n      }),\n      helperText: INVALID_RUNTIME,\n      id: \"standard-error-helper-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      name: \"movieYear\",\n      label: \"Movie Year\",\n      placeholder: \"Enter Movie Year...\",\n      variant: \"outlined\",\n      value: this.state.Year,\n      onChange: e => this.setState({\n        Year: e.target.value\n      }),\n      helperText: INVALID_YEAR,\n      id: \"standard-error-helper-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      name: \"movieDirector\",\n      label: \"Movie Director\",\n      placeholder: \"Enter Movie Year...\",\n      variant: \"outlined\",\n      value: this.state.Director,\n      onChange: e => this.setState({\n        Director: e.target.value\n      }),\n      helperText: INVALID_DIRECTOR,\n      id: \"standard-error-helper-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      name: \"movieImdbRating\",\n      label: \"IMDB Rating\",\n      placeholder: \"Enter Movie Year...\",\n      variant: \"outlined\",\n      value: this.state.imdbRating,\n      onChange: e => this.setState({\n        imdbRating: e.target.value\n      }),\n      helperText: INVALID_IMDB_RATING,\n      id: \"standard-error-helper-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      value: \"Submit\",\n      onClick: () => this.onSubmit(formErrors),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 15\n      }\n    }, \"Submit\")));\n  }\n\n}\n\nexport default withStyles(styles)(AddMovieForm);","map":{"version":3,"sources":["/Users/brianmckenna/Desktop/node_js_projects/BrianMcKenna_CA2/client/src/components/Modal/AddMovieForm.js"],"names":["React","Component","Button","TextField","withStyles","styles","theme","root","margin","spacing","width","textField","marginLeft","marginRight","color","AddMovieForm","state","imdbID","Title","Genre","Plot","Runtime","Year","Director","imdbRating","onSubmit","formErrors","console","log","length","props","addMovie","setState","closeWithSubmit","alert","render","classes","INVALID_MOVIE_ID","INVALID_TITLE","INVALID_GENRE","INVALID_PLOT","INVALID_RUNTIME","INVALID_YEAR","INVALID_DIRECTOR","INVALID_IMDB_RATING","match","push","e","target","value"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\n\n// had to find a way of changing a react hook style to a class component style as my react hook form was not working properly found the solution here: https://github.com/mui-org/material-ui/issues/15820\n\nconst styles = (theme) => ({\n    root: {\n        '& .MuiTextField-root': {\n          margin: theme.spacing(1),\n          width: '99%',\n        },\n      },\n      textField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: 200,\n        '& p':{\n          color:'blue',\n        },\n      },\n  });\n\nclass AddMovieForm extends Component {\n  \n    state = {\n        imdbID: \"\", \n        Title: \"\",\n        Genre: \"\",\n        Plot: \"\",\n        Runtime: \"\",\n        Year: \"\",\n        Director: \"\",\n        imdbRating: \"\"\n    }\n\n    // take in errorMessage array length?\n    onSubmit = (formErrors) => {\n\n      console.log(formErrors.length)\n\n      if(formErrors.length === 0)\n      {\n        this.props.addMovie(this.state)\n\n        this.setState({\n          imdbID: \"\", \n          Title: \"\",\n          Genre: \"\",\n          Plot: \"\",\n          Runtime: \"\",\n          Year: \"\",\n          Director: \"\",\n          imdbRating: \"\"\n        })\n  \n        this.props.closeWithSubmit()\n\n      }\n      else {\n        alert(\"NOT ENTERED\")\n      }\n    }\n  \n    render()\n    {\n        const { classes } = this.props;\n\n        // add each error to a list\n        // onsubmit check the length of the error list\n        // if the errors are === 0 then allow the onsubmit to happen\n\n        let INVALID_MOVIE_ID = \"\"\n        let INVALID_TITLE = \"\"\n        let INVALID_GENRE = \"\"\n        let INVALID_PLOT = \"\"\n        let INVALID_RUNTIME = \"\"\n        let INVALID_YEAR = \"\"\n        let INVALID_DIRECTOR = \"\"\n        let INVALID_IMDB_RATING = \"\"\n\n        const formErrors = []\n\n        // conditions for error messages\n\n        if(!this.state.imdbID.match(\"[T][T][0-9]+\"))\n        {\n          INVALID_MOVIE_ID += \"Enter a valid Movie Id e.g TT012345\"\n          formErrors.push(INVALID_MOVIE_ID)\n        }\n        if(!this.state.Title.match(\"^[a-zA-Z0-9]{2,30}$\"))\n        {\n          INVALID_TITLE += \"Enter a valid Movie Title (range 2-30 characters)\"\n          formErrors.push(INVALID_TITLE)\n        }\n        if(!this.state.Genre.match(\"^[a-zA-Z0-9]{2,30}$\"))\n        {\n          INVALID_GENRE += \"Enter a valid Movie Genre (range 2-30 characters)\"\n          formErrors.push(INVALID_GENRE)\n        }\n        if(!this.state.Plot.match(\"^[a-zA-Z0-9]{2,200}$\"))\n        {\n          INVALID_PLOT += \"Enter a valid Movie Plot (range 2-200 characters)\"\n          formErrors.push(INVALID_PLOT)\n        }\n        if(!this.state.Runtime.match(\"^[0-9]{2,3} [m][i][n]$\"))\n        {\n          INVALID_RUNTIME += \"Enter a valid Movie Runtime e.g 90 min or 120 min\"\n          formErrors.push(INVALID_RUNTIME)\n        }\n        if(!this.state.Year.match(\"(?:(?:19|20)[0-9]{2})\"))\n        {\n          INVALID_YEAR += \"Enter a valid Movie Year (range 1900-2099)\"\n          formErrors.push(INVALID_YEAR)\n        }\n        if(this.state.Director.length < 2 || !this.state.Director.match(\"^[A-Za-z\\\\s]+$\"))\n        {\n          INVALID_DIRECTOR += \"Enter a valid Movie Director e.g Michael Jackson\"\n          formErrors.push(INVALID_DIRECTOR)\n        }\n        if(!this.state.imdbRating.match(\"^([0-9]|1[0])$\"))\n        {\n          INVALID_IMDB_RATING += \"Enter a valid IMDB Rating (1-10)\"\n          formErrors.push(INVALID_IMDB_RATING)\n        }\n\n        // const errorListItems = formErrors.map((formError, index) => <li key={index++}>{formError}</li>)\n        \n        return (\n            <form className={classes.root} noValidate autoComplete=\"off\" >\n              <div>\n                <TextField\n                  required\n                  name=\"movieId\"\n                  label=\"Movie Id\"\n                  placeholder=\"Enter Movie ID...\"\n                  variant=\"outlined\"\n                  value={this.state.imdbID}\n                  onChange={e => this.setState({imdbID: e.target.value})}\n                  helperText={INVALID_MOVIE_ID}\n                  id=\"standard-error-helper-text\"  \n                  className={classes.textField}                \n                />\n    \n                <TextField\n                  required\n                  name=\"movieTitle\"\n                  label=\"Movie Title\"\n                  placeholder=\"Enter Movie Title...\"\n                  variant=\"outlined\"\n                  value={this.state.Title}\n                  onChange={e => this.setState({Title: e.target.value})}\n                  helperText={INVALID_TITLE}\n                  id=\"standard-error-helper-text\"\n                />\n    \n                <TextField\n                  required                \n                  name=\"movieGenre\"\n                  label=\"Movie Genre\"\n                  placeholder=\"Enter Movie Genre...\"\n                  variant=\"outlined\"\n                  value={this.state.Genre}\n                  onChange={e => this.setState({Genre: e.target.value})}\n                  helperText={INVALID_GENRE}\n                  id=\"standard-error-helper-text\"\n                />\n    \n                <TextField\n                  required \n                  name=\"moviePlot\"\n                  label=\"Movie Plot\"\n                  placeholder=\"Enter Movie Plot...\"\n                  variant=\"outlined\"\n                  multiline={true}\n                  fullWidth={true}\n                  value={this.state.Plot}\n                  onChange={e => this.setState({Plot: e.target.value})}\n                  helperText={INVALID_PLOT}\n                  id=\"standard-error-helper-text\"\n                />\n    \n                <TextField\n                  required \n                  name=\"movieRuntime\"\n                  label=\"Movie Runtime\"\n                  placeholder=\"Enter Movie Runtime...\"\n                  variant=\"outlined\"\n                  value={this.state.Runtime}\n                  onChange={e => this.setState({Runtime: e.target.value})}\n                  helperText={INVALID_RUNTIME}\n                  id=\"standard-error-helper-text\"\n                  />\n    \n                <TextField\n                  required \n                  name=\"movieYear\"\n                  label=\"Movie Year\"\n                  placeholder=\"Enter Movie Year...\"\n                  variant=\"outlined\"\n                  value={this.state.Year}\n                  onChange={e => this.setState({Year: e.target.value})}\n                  helperText={INVALID_YEAR}\n                  id=\"standard-error-helper-text\"\n                />\n\n                <TextField\n                  required \n                  name=\"movieDirector\"\n                  label=\"Movie Director\"\n                  placeholder=\"Enter Movie Year...\"\n                  variant=\"outlined\"\n                  value={this.state.Director}\n                  onChange={e => this.setState({Director: e.target.value})}\n                  helperText={INVALID_DIRECTOR}\n                  id=\"standard-error-helper-text\"\n                />\n\n                <TextField\n                  required \n                  name=\"movieImdbRating\"\n                  label=\"IMDB Rating\"\n                  placeholder=\"Enter Movie Year...\"\n                  variant=\"outlined\"\n                  value={this.state.imdbRating}\n                  onChange={e => this.setState({imdbRating: e.target.value})}\n                  helperText={INVALID_IMDB_RATING}\n                  id=\"standard-error-helper-text\"\n                />\n\n                {/* <ul>{errorListItems}</ul> */}\n    \n              <Button variant=\"primary\" value=\"Submit\" onClick={() => this.onSubmit(formErrors)} >\n                Submit\n              </Button>\n              \n              </div>\n            </form>\n          )\n    }\n}\n\nexport default withStyles(styles)(AddMovieForm);"]},"metadata":{},"sourceType":"module"}