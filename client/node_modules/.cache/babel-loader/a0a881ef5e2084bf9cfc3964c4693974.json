{"ast":null,"code":"var _jsxFileName = \"/Users/brianmckenna/Desktop/node_js_projects/BrianMcKenna_CA2/client/src/components/Modal/AddMovieForm.js\";\nimport React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles'; // had to find a way of changing a react hook style to a class component style as my react hook form was not working properly found the solution here: https://github.com/mui-org/material-ui/issues/15820\n\nlet styles = theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '99%'\n    }\n  }\n});\n\nclass AddMovieForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      imdbID: \"\",\n      Title: \"\",\n      Genre: \"\",\n      Plot: \"\",\n      Runtime: \"\",\n      Year: \"\",\n      Director: \"\",\n      imdbRating: \"\"\n    };\n\n    this.onSubmit = formErrors => {\n      if (formErrors.length === 0) {\n        this.props.addMovie(this.state);\n        this.setState({\n          imdbID: \"\",\n          Title: \"\",\n          Genre: \"\",\n          Plot: \"\",\n          Runtime: \"\",\n          Year: \"\",\n          Director: \"\",\n          imdbRating: \"\"\n        });\n        this.props.closeWithSubmit();\n      } else {\n        const errorListItems = formErrors.map((formError, index) => /*#__PURE__*/React.createElement(\"li\", {\n          key: index++,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 69\n          }\n        }, formError));\n        console.log(errorListItems);\n        alert({\n          errorListItems\n        });\n      }\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props; // add each error to a list\n    // onsubmit check the length of the error list\n    // if the errors are === 0 then allow the onsubmit to happen\n\n    let INVALID_MOVIE_ID_MSG = \"\";\n    let INVALID_TITLE_MSG = \"\";\n    let INVALID_GENRE_MSG = \"\";\n    let INVALID_PLOT_MSG = \"\";\n    let INVALID_RUNTIME_MSG = \"\";\n    let INVALID_YEAR_MSG = \"\";\n    let INVALID_DIRECTOR_MSG = \"\";\n    let INVALID_IMDB_RATING_MSG = \"\";\n    const formErrors = [];\n    let isNotValidMovieId = false;\n    let isNotValidMovieTitle = false;\n    let isNotValidMovieGenre = false;\n    let isNotValidMoviePlot = false;\n    let isNotValidMovieRuntime = false;\n    let isNotValidMovieYear = false;\n    let isNotValidMovieDirector = false;\n    let isNotValidMovieImdbRating = false; // conditions for error messages\n\n    if (!this.state.imdbID.match(\"[T][T][0-9]+\")) {\n      INVALID_MOVIE_ID_MSG += \"Enter a valid Movie Id e.g TT012345\";\n      formErrors.push(INVALID_MOVIE_ID_MSG);\n      isNotValidMovieId = true;\n    }\n\n    if (!this.state.Title.match(\"^[a-zA-Z0-9]{2,30}$\")) {\n      INVALID_TITLE_MSG += \"Enter a valid Movie Title (range 2-30 characters)\";\n      formErrors.push(INVALID_TITLE_MSG);\n      isNotValidMovieTitle = true;\n    }\n\n    if (!this.state.Genre.match(\"^[a-zA-Z0-9]{2,30}$\")) {\n      INVALID_GENRE_MSG += \"Enter a valid Movie Genre (range 2-30 characters)\";\n      formErrors.push(INVALID_GENRE_MSG);\n      isNotValidMovieGenre = true;\n    }\n\n    if (!this.state.Plot.match(\"^[a-zA-Z0-9]{2,200}$\")) {\n      INVALID_PLOT_MSG += \"Enter a valid Movie Plot (range 2-200 characters)\";\n      formErrors.push(INVALID_PLOT_MSG);\n      isNotValidMoviePlot = true;\n    }\n\n    if (!this.state.Runtime.match(\"^[0-9]{2,3} [m][i][n]$\")) {\n      INVALID_RUNTIME_MSG += \"Enter a valid Movie Runtime e.g 90 min or 120 min\";\n      formErrors.push(INVALID_RUNTIME_MSG);\n      isNotValidMovieRuntime = true;\n    }\n\n    if (!this.state.Year.match(\"(?:(?:19|20)[0-9]{2})\")) {\n      INVALID_YEAR_MSG += \"Enter a valid Movie Year (range 1900-2099)\";\n      formErrors.push(INVALID_YEAR_MSG);\n      isNotValidMovieYear = true;\n    }\n\n    if (this.state.Director.length < 2 || !this.state.Director.match(\"^[A-Za-z\\\\s]+$\")) {\n      INVALID_DIRECTOR_MSG += \"Enter a valid Movie Director e.g Michael Jackson\";\n      formErrors.push(INVALID_DIRECTOR_MSG);\n      isNotValidMovieDirector = true;\n    }\n\n    if (!this.state.imdbRating.match(\"^([0-9]|1[0])$\")) {\n      INVALID_IMDB_RATING_MSG += \"Enter a valid IMDB Rating (1-10)\";\n      formErrors.push(INVALID_IMDB_RATING_MSG);\n      isNotValidMovieImdbRating = true;\n    }\n\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: classes.root,\n      noValidate: true,\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      error: isNotValidMovieId,\n      required: true,\n      name: \"movieId\",\n      label: \"Movie Id\",\n      placeholder: \"Enter Movie ID...\",\n      variant: \"outlined\",\n      value: this.state.imdbID,\n      onChange: e => this.setState({\n        imdbID: e.target.value\n      }),\n      helperText: INVALID_MOVIE_ID_MSG,\n      id: \"standard-error-helper-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      error: isNotValidMovieTitle,\n      required: true,\n      name: \"movieTitle\",\n      label: \"Movie Title\",\n      placeholder: \"Enter Movie Title...\",\n      variant: \"outlined\",\n      value: this.state.Title,\n      onChange: e => this.setState({\n        Title: e.target.value\n      }),\n      helperText: INVALID_TITLE_MSG,\n      id: \"standard-error-helper-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      error: isNotValidMovieGenre,\n      required: true,\n      name: \"movieGenre\",\n      label: \"Movie Genre\",\n      placeholder: \"Enter Movie Genre...\",\n      variant: \"outlined\",\n      value: this.state.Genre,\n      onChange: e => this.setState({\n        Genre: e.target.value\n      }),\n      helperText: INVALID_GENRE_MSG,\n      id: \"standard-error-helper-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      error: isNotValidMoviePlot,\n      required: true,\n      name: \"moviePlot\",\n      label: \"Movie Plot\",\n      placeholder: \"Enter Movie Plot...\",\n      variant: \"outlined\",\n      multiline: true,\n      fullWidth: true,\n      value: this.state.Plot,\n      onChange: e => this.setState({\n        Plot: e.target.value\n      }),\n      helperText: INVALID_PLOT_MSG,\n      id: \"standard-error-helper-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      error: isNotValidMovieRuntime,\n      required: true,\n      name: \"movieRuntime\",\n      label: \"Movie Runtime\",\n      placeholder: \"Enter Movie Runtime...\",\n      variant: \"outlined\",\n      value: this.state.Runtime,\n      onChange: e => this.setState({\n        Runtime: e.target.value\n      }),\n      helperText: INVALID_RUNTIME_MSG,\n      id: \"standard-error-helper-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      error: isNotValidMovieYear,\n      required: true,\n      name: \"movieYear\",\n      label: \"Movie Year\",\n      placeholder: \"Enter Movie Year...\",\n      variant: \"outlined\",\n      value: this.state.Year,\n      onChange: e => this.setState({\n        Year: e.target.value\n      }),\n      helperText: INVALID_YEAR_MSG,\n      id: \"standard-error-helper-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      error: isNotValidMovieDirector,\n      required: true,\n      name: \"movieDirector\",\n      label: \"Movie Director\",\n      placeholder: \"Enter Movie Year...\",\n      variant: \"outlined\",\n      value: this.state.Director,\n      onChange: e => this.setState({\n        Director: e.target.value\n      }),\n      helperText: INVALID_DIRECTOR_MSG,\n      id: \"standard-error-helper-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      error: isNotValidMovieImdbRating,\n      required: true,\n      name: \"movieImdbRating\",\n      label: \"IMDB Rating\",\n      placeholder: \"Enter Movie Year...\",\n      variant: \"outlined\",\n      value: this.state.imdbRating,\n      onChange: e => this.setState({\n        imdbRating: e.target.value\n      }),\n      helperText: INVALID_IMDB_RATING_MSG,\n      id: \"standard-error-helper-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      value: \"Submit\",\n      onClick: () => this.onSubmit(formErrors),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 15\n      }\n    }, \"Submit\")));\n  }\n\n}\n\nexport default withStyles(styles)(AddMovieForm);","map":{"version":3,"sources":["/Users/brianmckenna/Desktop/node_js_projects/BrianMcKenna_CA2/client/src/components/Modal/AddMovieForm.js"],"names":["React","Component","Button","TextField","withStyles","styles","theme","root","margin","spacing","width","AddMovieForm","state","imdbID","Title","Genre","Plot","Runtime","Year","Director","imdbRating","onSubmit","formErrors","length","props","addMovie","setState","closeWithSubmit","errorListItems","map","formError","index","console","log","alert","render","classes","INVALID_MOVIE_ID_MSG","INVALID_TITLE_MSG","INVALID_GENRE_MSG","INVALID_PLOT_MSG","INVALID_RUNTIME_MSG","INVALID_YEAR_MSG","INVALID_DIRECTOR_MSG","INVALID_IMDB_RATING_MSG","isNotValidMovieId","isNotValidMovieTitle","isNotValidMovieGenre","isNotValidMoviePlot","isNotValidMovieRuntime","isNotValidMovieYear","isNotValidMovieDirector","isNotValidMovieImdbRating","match","push","e","target","value"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\n\n// had to find a way of changing a react hook style to a class component style as my react hook form was not working properly found the solution here: https://github.com/mui-org/material-ui/issues/15820\n\nlet styles = (theme) => ({\n    root: {\n        '& .MuiTextField-root': {\n          margin: theme.spacing(1),\n          width: '99%',\n        },\n      },\n  });\n\nclass AddMovieForm extends Component {\n  \n    state = {\n        imdbID: \"\", \n        Title: \"\",\n        Genre: \"\",\n        Plot: \"\",\n        Runtime: \"\",\n        Year: \"\",\n        Director: \"\",\n        imdbRating: \"\"\n    }\n\n    // take in errorMessage array length?\n    onSubmit = (formErrors) => {\n\n      if(formErrors.length === 0)\n      {\n        this.props.addMovie(this.state)\n\n        this.setState({\n          imdbID: \"\", \n          Title: \"\",\n          Genre: \"\",\n          Plot: \"\",\n          Runtime: \"\",\n          Year: \"\",\n          Director: \"\",\n          imdbRating: \"\"\n        })\n        this.props.closeWithSubmit()\n      }\n      else {\n        const errorListItems = formErrors.map((formError, index) => <li key={index++}>{formError}</li>)\n        console.log(errorListItems)\n        alert({errorListItems})\n      }\n    }\n  \n    render()\n    {\n        const { classes } = this.props;\n\n        // add each error to a list\n        // onsubmit check the length of the error list\n        // if the errors are === 0 then allow the onsubmit to happen\n\n        let INVALID_MOVIE_ID_MSG = \"\"\n        let INVALID_TITLE_MSG = \"\"\n        let INVALID_GENRE_MSG = \"\"\n        let INVALID_PLOT_MSG = \"\"\n        let INVALID_RUNTIME_MSG = \"\"\n        let INVALID_YEAR_MSG = \"\"\n        let INVALID_DIRECTOR_MSG = \"\"\n        let INVALID_IMDB_RATING_MSG = \"\"\n\n        const formErrors = []\n\n        let isNotValidMovieId = false\n        let isNotValidMovieTitle = false\n        let isNotValidMovieGenre = false\n        let isNotValidMoviePlot = false\n        let isNotValidMovieRuntime = false\n        let isNotValidMovieYear = false\n        let isNotValidMovieDirector = false\n        let isNotValidMovieImdbRating = false\n\n        // conditions for error messages\n\n        if(!this.state.imdbID.match(\"[T][T][0-9]+\"))\n        {\n          INVALID_MOVIE_ID_MSG += \"Enter a valid Movie Id e.g TT012345\"\n          formErrors.push(INVALID_MOVIE_ID_MSG)\n          isNotValidMovieId = true\n        }\n        if(!this.state.Title.match(\"^[a-zA-Z0-9]{2,30}$\"))\n        {\n          INVALID_TITLE_MSG += \"Enter a valid Movie Title (range 2-30 characters)\"\n          formErrors.push(INVALID_TITLE_MSG)\n          isNotValidMovieTitle = true\n        }\n        if(!this.state.Genre.match(\"^[a-zA-Z0-9]{2,30}$\"))\n        {\n          INVALID_GENRE_MSG += \"Enter a valid Movie Genre (range 2-30 characters)\"\n          formErrors.push(INVALID_GENRE_MSG)\n          isNotValidMovieGenre = true\n        }\n        if(!this.state.Plot.match(\"^[a-zA-Z0-9]{2,200}$\"))\n        {\n          INVALID_PLOT_MSG += \"Enter a valid Movie Plot (range 2-200 characters)\"\n          formErrors.push(INVALID_PLOT_MSG)\n          isNotValidMoviePlot = true\n        }\n        if(!this.state.Runtime.match(\"^[0-9]{2,3} [m][i][n]$\"))\n        {\n          INVALID_RUNTIME_MSG += \"Enter a valid Movie Runtime e.g 90 min or 120 min\"\n          formErrors.push(INVALID_RUNTIME_MSG)\n          isNotValidMovieRuntime = true\n        }\n        if(!this.state.Year.match(\"(?:(?:19|20)[0-9]{2})\"))\n        {\n          INVALID_YEAR_MSG += \"Enter a valid Movie Year (range 1900-2099)\"\n          formErrors.push(INVALID_YEAR_MSG)\n          isNotValidMovieYear = true\n        }\n        if(this.state.Director.length < 2 || !this.state.Director.match(\"^[A-Za-z\\\\s]+$\"))\n        {\n          INVALID_DIRECTOR_MSG += \"Enter a valid Movie Director e.g Michael Jackson\"\n          formErrors.push(INVALID_DIRECTOR_MSG)\n          isNotValidMovieDirector = true\n        }\n        if(!this.state.imdbRating.match(\"^([0-9]|1[0])$\"))\n        {\n          INVALID_IMDB_RATING_MSG += \"Enter a valid IMDB Rating (1-10)\"\n          formErrors.push(INVALID_IMDB_RATING_MSG)\n          isNotValidMovieImdbRating = true\n        }\n\n        \n        \n        return (\n            <form className={classes.root} noValidate autoComplete=\"off\" >\n              <div>\n                <TextField\n                  error={isNotValidMovieId}\n                  required\n                  name=\"movieId\"\n                  label=\"Movie Id\"\n                  placeholder=\"Enter Movie ID...\"\n                  variant=\"outlined\"\n                  value={this.state.imdbID}\n                  onChange={e => this.setState({imdbID: e.target.value})}\n                  helperText={INVALID_MOVIE_ID_MSG}\n                  id=\"standard-error-helper-text\"    \n                />\n    \n                <TextField\n                  error={isNotValidMovieTitle}\n                  required\n                  name=\"movieTitle\"\n                  label=\"Movie Title\"\n                  placeholder=\"Enter Movie Title...\"\n                  variant=\"outlined\"\n                  value={this.state.Title}\n                  onChange={e => this.setState({Title: e.target.value})}\n                  helperText={INVALID_TITLE_MSG}\n                  id=\"standard-error-helper-text\"\n                />\n    \n                <TextField\n                  error={isNotValidMovieGenre}\n                  required                \n                  name=\"movieGenre\"\n                  label=\"Movie Genre\"\n                  placeholder=\"Enter Movie Genre...\"\n                  variant=\"outlined\"\n                  value={this.state.Genre}\n                  onChange={e => this.setState({Genre: e.target.value})}\n                  helperText={INVALID_GENRE_MSG}\n                  id=\"standard-error-helper-text\"\n                />\n    \n                <TextField\n                  error={isNotValidMoviePlot}\n                  required \n                  name=\"moviePlot\"\n                  label=\"Movie Plot\"\n                  placeholder=\"Enter Movie Plot...\"\n                  variant=\"outlined\"\n                  multiline={true}\n                  fullWidth={true}\n                  value={this.state.Plot}\n                  onChange={e => this.setState({Plot: e.target.value})}\n                  helperText={INVALID_PLOT_MSG}\n                  id=\"standard-error-helper-text\"\n                />\n    \n                <TextField\n                  error={isNotValidMovieRuntime}\n                  required \n                  name=\"movieRuntime\"\n                  label=\"Movie Runtime\"\n                  placeholder=\"Enter Movie Runtime...\"\n                  variant=\"outlined\"\n                  value={this.state.Runtime}\n                  onChange={e => this.setState({Runtime: e.target.value})}\n                  helperText={INVALID_RUNTIME_MSG}\n                  id=\"standard-error-helper-text\"\n                  />\n    \n                <TextField\n                  error={isNotValidMovieYear}\n                  required \n                  name=\"movieYear\"\n                  label=\"Movie Year\"\n                  placeholder=\"Enter Movie Year...\"\n                  variant=\"outlined\"\n                  value={this.state.Year}\n                  onChange={e => this.setState({Year: e.target.value})}\n                  helperText={INVALID_YEAR_MSG}\n                  id=\"standard-error-helper-text\"\n                />\n\n                <TextField\n                  error={isNotValidMovieDirector}\n                  required \n                  name=\"movieDirector\"\n                  label=\"Movie Director\"\n                  placeholder=\"Enter Movie Year...\"\n                  variant=\"outlined\"\n                  value={this.state.Director}\n                  onChange={e => this.setState({Director: e.target.value})}\n                  helperText={INVALID_DIRECTOR_MSG}\n                  id=\"standard-error-helper-text\"\n                />\n\n                <TextField\n                  error={isNotValidMovieImdbRating}\n                  required \n                  name=\"movieImdbRating\"\n                  label=\"IMDB Rating\"\n                  placeholder=\"Enter Movie Year...\"\n                  variant=\"outlined\"\n                  value={this.state.imdbRating}\n                  onChange={e => this.setState({imdbRating: e.target.value})}\n                  helperText={INVALID_IMDB_RATING_MSG}\n                  id=\"standard-error-helper-text\"\n                />\n    \n              <Button variant=\"primary\" value=\"Submit\" onClick={() => this.onSubmit(formErrors)} >\n                Submit\n              </Button>\n              \n              </div>\n            </form>\n          )\n    }\n}\n\nexport default withStyles(styles)(AddMovieForm);"]},"metadata":{},"sourceType":"module"}