{"ast":null,"code":"var _jsxFileName = \"/Users/brianmckenna/Desktop/node_js_projects/BrianMcKenna_CA2/client/src/components/Modal/AddMovieForm.js\";\nimport React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles'; // had to find a way of changing a react hook style to a class component style as my react hook form was not working properly found the solution here: https://github.com/mui-org/material-ui/issues/15820\n\nconst styles = theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '99%'\n    }\n  }\n});\n\nclass AddMovieForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      imdbID: \"\",\n      Title: \"\",\n      Genre: \"\",\n      Plot: \"\",\n      Runtime: \"\",\n      Year: \"\",\n      Director: \"\",\n      imdbRating: \"\"\n    };\n\n    this.onSubmit = () => {\n      this.props.addMovie(this.state);\n      this.setState({\n        imdbID: \"\",\n        Title: \"\",\n        Genre: \"\",\n        Plot: \"\",\n        Runtime: \"\",\n        Year: \"\",\n        Director: \"\",\n        imdbRating: \"\"\n      });\n      this.props.closeWithSubmit();\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props; // add each error to a list\n    // onsubmit check the length of the error list\n    // if the errors are === 0 then allow the onsubmit to happen\n\n    const INVALID_ID = \"You must enter a valid Movie Id\";\n    const INVALID_TITLE = \"You must enter a valid Movie Title\";\n    const formErrors = [];\n\n    if (this.state.imdbID.length < 1) {\n      formErrors.push(INVALID_ID);\n    }\n\n    if (this.state.Title.length < 1) {\n      formErrors.push(INVALID_TITLE);\n    }\n\n    const errorListItems = formErrors.map(formError => /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 62\n      }\n    }, formError));\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: classes.root,\n      noValidate: true,\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      label: \"Required\",\n      id: \"standard-required\",\n      name: \"movieId\",\n      label: \"Movie Id\",\n      placeholder: \"Enter Movie ID...\",\n      variant: \"outlined\",\n      value: this.state.imdbID,\n      onChange: e => this.setState({\n        imdbID: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      label: \"Required\",\n      id: \"standard-required\",\n      name: \"movieTitle\",\n      label: \"Movie Title\",\n      placeholder: \"Enter Movie Title...\",\n      variant: \"outlined\",\n      value: this.state.Title,\n      onChange: e => this.setState({\n        Title: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      label: \"Required\",\n      id: \"standard-required\",\n      name: \"movieGenre\",\n      label: \"Movie Genre\",\n      placeholder: \"Enter Movie Genre...\",\n      variant: \"outlined\",\n      value: this.state.Genre,\n      onChange: e => this.setState({\n        Genre: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      label: \"Required\",\n      id: \"standard-required\",\n      name: \"moviePlot\",\n      label: \"Movie Plot\",\n      placeholder: \"Enter Movie Plot...\",\n      variant: \"outlined\",\n      multiline: true,\n      fullWidth: true,\n      value: this.state.Plot,\n      onChange: e => this.setState({\n        Plot: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      label: \"Required\",\n      id: \"standard-required\",\n      name: \"movieRuntime\",\n      label: \"Movie Runtime\",\n      placeholder: \"Enter Movie Runtime...\",\n      variant: \"outlined\",\n      value: this.state.Runtime,\n      onChange: e => this.setState({\n        Runtime: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      label: \"Required\",\n      id: \"standard-required\",\n      name: \"movieYear\",\n      label: \"Movie Year\",\n      placeholder: \"Enter Movie Year...\",\n      variant: \"outlined\",\n      value: this.state.Year,\n      onChange: e => this.setState({\n        Year: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      label: \"Required\",\n      id: \"standard-required\",\n      name: \"movieDirector\",\n      label: \"Movie Director\",\n      placeholder: \"Enter Movie Year...\",\n      variant: \"outlined\",\n      value: this.state.Director,\n      onChange: e => this.setState({\n        Director: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      label: \"Required\",\n      id: \"standard-required\",\n      name: \"movieImdbRating\",\n      label: \"IMDB Rating\",\n      placeholder: \"Enter Movie Year...\",\n      variant: \"outlined\",\n      value: this.state.imdbRating,\n      onChange: e => this.setState({\n        imdbRating: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }\n    }, errorListItems), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      value: \"Submit\",\n      onClick: () => this.onSubmit(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 15\n      }\n    }, \"Submit\")));\n  }\n\n}\n\nexport default withStyles(styles)(AddMovieForm);","map":{"version":3,"sources":["/Users/brianmckenna/Desktop/node_js_projects/BrianMcKenna_CA2/client/src/components/Modal/AddMovieForm.js"],"names":["React","Component","Button","TextField","withStyles","styles","theme","root","margin","spacing","width","AddMovieForm","state","imdbID","Title","Genre","Plot","Runtime","Year","Director","imdbRating","onSubmit","props","addMovie","setState","closeWithSubmit","render","classes","INVALID_ID","INVALID_TITLE","formErrors","length","push","errorListItems","map","formError","e","target","value"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\n\n// had to find a way of changing a react hook style to a class component style as my react hook form was not working properly found the solution here: https://github.com/mui-org/material-ui/issues/15820\n\nconst styles = (theme) => ({\n    root: {\n        '& .MuiTextField-root': {\n          margin: theme.spacing(1),\n          width: '99%',\n        },\n      },\n  });\n\nclass AddMovieForm extends Component {\n  \n    state = {\n        imdbID: \"\", \n        Title: \"\",\n        Genre: \"\",\n        Plot: \"\",\n        Runtime: \"\",\n        Year: \"\",\n        Director: \"\",\n        imdbRating: \"\"\n    }\n\n    onSubmit = () => {\n\n        this.props.addMovie(this.state)\n\n        this.setState({\n          imdbID: \"\", \n          Title: \"\",\n          Genre: \"\",\n          Plot: \"\",\n          Runtime: \"\",\n          Year: \"\",\n          Director: \"\",\n          imdbRating: \"\"\n        })\n\n        this.props.closeWithSubmit()\n    }\n  \n    render()\n    {\n        const { classes } = this.props;\n\n        // add each error to a list\n        // onsubmit check the length of the error list\n        // if the errors are === 0 then allow the onsubmit to happen\n\n        const INVALID_ID = \"You must enter a valid Movie Id\"\n        const INVALID_TITLE = \"You must enter a valid Movie Title\"\n\n        const formErrors = []\n\n        if(this.state.imdbID.length < 1)\n        {\n          formErrors.push(INVALID_ID)\n        }\n        if(this.state.Title.length < 1)\n        {\n          formErrors.push(INVALID_TITLE)\n        }\n\n        const errorListItems = formErrors.map((formError) => <li>{formError}</li>);\n        \n        return (\n            <form className={classes.root} noValidate autoComplete=\"off\" >\n              <div>\n                <TextField\n                  required\n                  label=\"Required\"\n                  id=\"standard-required\"\n                  name=\"movieId\"\n                  label=\"Movie Id\"\n                  placeholder=\"Enter Movie ID...\"\n                  variant=\"outlined\"\n                  value={this.state.imdbID}\n                  onChange={e => this.setState({imdbID: e.target.value})}\n                />\n    \n                <TextField\n                  required\n                  label=\"Required\"\n                  id=\"standard-required\"\n                  name=\"movieTitle\"\n                  label=\"Movie Title\"\n                  placeholder=\"Enter Movie Title...\"\n                  variant=\"outlined\"\n                  value={this.state.Title}\n                  onChange={e => this.setState({Title: e.target.value})}\n                />\n    \n                <TextField\n                  required\n                  label=\"Required\"                \n                  id=\"standard-required\"\n                  name=\"movieGenre\"\n                  label=\"Movie Genre\"\n                  placeholder=\"Enter Movie Genre...\"\n                  variant=\"outlined\"\n                  value={this.state.Genre}\n                  onChange={e => this.setState({Genre: e.target.value})}\n                />\n    \n                <TextField\n                  required\n                  label=\"Required\" \n                  id=\"standard-required\"\n                  name=\"moviePlot\"\n                  label=\"Movie Plot\"\n                  placeholder=\"Enter Movie Plot...\"\n                  variant=\"outlined\"\n                  multiline={true}\n                  fullWidth={true}\n                  value={this.state.Plot}\n                  onChange={e => this.setState({Plot: e.target.value})}\n                />\n    \n                <TextField\n                  required\n                  label=\"Required\" \n                  id=\"standard-required\"\n                  name=\"movieRuntime\"\n                  label=\"Movie Runtime\"\n                  placeholder=\"Enter Movie Runtime...\"\n                  variant=\"outlined\"\n                  value={this.state.Runtime}\n                  onChange={e => this.setState({Runtime: e.target.value})}\n                  />\n    \n                <TextField\n                  required\n                  label=\"Required\" \n                  id=\"standard-required\"\n                  name=\"movieYear\"\n                  label=\"Movie Year\"\n                  placeholder=\"Enter Movie Year...\"\n                  variant=\"outlined\"\n                  value={this.state.Year}\n                  onChange={e => this.setState({Year: e.target.value})}\n                />\n\n                <TextField\n                  required\n                  label=\"Required\" \n                  id=\"standard-required\"\n                  name=\"movieDirector\"\n                  label=\"Movie Director\"\n                  placeholder=\"Enter Movie Year...\"\n                  variant=\"outlined\"\n                  value={this.state.Director}\n                  onChange={e => this.setState({Director: e.target.value})}\n                />\n\n                <TextField\n                  required\n                  label=\"Required\" \n                  id=\"standard-required\"\n                  name=\"movieImdbRating\"\n                  label=\"IMDB Rating\"\n                  placeholder=\"Enter Movie Year...\"\n                  variant=\"outlined\"\n                  value={this.state.imdbRating}\n                  onChange={e => this.setState({imdbRating: e.target.value})}\n                />\n\n                <p>{errorListItems}</p>\n    \n              <Button variant=\"primary\" value=\"Submit\" onClick={() => this.onSubmit()} >\n                Submit\n              </Button>\n              \n              </div>\n            </form>\n          )\n    }\n}\n\nexport default withStyles(styles)(AddMovieForm);"]},"metadata":{},"sourceType":"module"}